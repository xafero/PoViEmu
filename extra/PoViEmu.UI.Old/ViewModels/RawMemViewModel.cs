using System.Collections.ObjectModel;
using CommunityToolkit.Mvvm.ComponentModel;
using PoViEmu.Base;
using PoViEmu.UI.Models;

namespace PoViEmu.UI.ViewModels
{
    public partial class RawMemViewModel : ViewModelBase
    {
        [ObservableProperty] private ObservableCollection<BytesLine> _byteLines = [];

        public void Init()
        {
            const int lineSize = 16;
            ByteLines.Clear();

            ushort offset = 0xD000;
            byte[] allBytes =
            [
                0x00, 0xFF, 0x43, 0x41, 0x53, 0x49, 0x4F, 0x03, 0x5A, 0x34, 0x38, 0x36, 0x30, 0x31, 0x30, 0x30, 0x01,
                0x01, 0xFF, 0x08, 0x61, 0x73, 0x73, 0x74, 0x65, 0x73, 0x74, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0x54, 0x09, 0x00, 0x00, 0x32, 0x30, 0x32, 0x34, 0x30, 0x38, 0x31, 0x33, 0x32, 0x31, 0x31,
                0x31, 0x30, 0x31, 0x30, 0x31, 0x32, 0x30, 0x30, 0x30, 0x30, 0x32, 0x31, 0x35, 0x30, 0x39, 0x34, 0x30,
                0x30, 0x31, 0x30, 0x30, 0x50, 0x08, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xB8, 0x00, 0x19, 0x8E, 0xC0, 0xB8, 0x16, 0x80, 0x8E, 0xD8, 0x33, 0xF6, 0xBF, 0x00, 0x00, 0xB9,
                0xA4, 0x04, 0xFC, 0xF3, 0xA4, 0x06, 0x1F, 0xBF, 0xA4, 0x04, 0xB9, 0xA4, 0x04, 0x2B, 0xCF, 0x32, 0xC0,
                0xF3, 0xAA, 0xBB, 0x00, 0x08, 0xB8, 0x00, 0x08, 0x2B, 0xC3, 0x76, 0x1C, 0x8B, 0xC8, 0xC1, 0xE1, 0x03,
                0x3D, 0x00, 0x10, 0x76, 0x06, 0xB8, 0x00, 0x10, 0xB9, 0x00, 0x80, 0x8E, 0xC3, 0x03, 0xD8, 0x33, 0xFF,
                0x33, 0xC0, 0xF3, 0xAB, 0xEB, 0xDD, 0xC7, 0x06, 0x00, 0x00, 0x00, 0x00, 0xEA, 0x04, 0x00, 0x60, 0x80,
                0xCB, 0xCB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x32,
                0x13, 0x3F, 0x13, 0x55, 0x01, 0x00, 0x80, 0x00, 0x00, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
                0x20, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
                0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x88, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
                0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4,
                0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0xC1, 0xC1, 0xC1, 0xC1, 0xC1, 0xC1, 0x81, 0x81, 0x81, 0x81,
                0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x90,
                0x90, 0x90, 0x90, 0x90, 0x90, 0xC2, 0xC2, 0xC2, 0xC2, 0xC2, 0xC2, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82,
                0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x90, 0x90, 0x90,
                0x90, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x39, 0x30,
                0x30, 0x31, 0x32, 0x33, 0x31, 0x32, 0x31, 0x30, 0x30, 0x30, 0x31, 0x30, 0x31, 0x55, 0x8B, 0xEC, 0x83,
                0xEC, 0x22, 0x51, 0x52, 0xC7, 0x46, 0xFE, 0xD5, 0x7E, 0xC7, 0x46, 0xFC, 0xD4, 0x7E, 0xC7, 0x46, 0xFA,
                0xD3, 0x7E, 0x8B, 0x46, 0xFE, 0x03, 0x46, 0xFC, 0x89, 0x46, 0xF8, 0x8B, 0x46, 0xFE, 0x2B, 0x46, 0xFC,
                0x89, 0x46, 0xF8, 0x8B, 0x46, 0xFE, 0xF7, 0x66, 0xFC, 0x89, 0x46, 0xF8, 0x8B, 0x46, 0xFE, 0x99, 0xF7,
                0x7E, 0xFC, 0x89, 0x46, 0xF8, 0xFF, 0x4E, 0xF8, 0x8B, 0x46, 0xFE, 0x99, 0xF7, 0x7E, 0xFC, 0x89, 0x56,
                0xF8, 0xFF, 0x46, 0xF8, 0x8B, 0x46, 0xFE, 0x3B, 0x46, 0xF8, 0x75, 0x05, 0xB8, 0x01, 0x00, 0xEB, 0x02,
                0x33, 0xC0, 0x89, 0x46, 0xF6, 0x8B, 0x46, 0xFE, 0x3B, 0x46, 0xF8, 0x74, 0x05, 0xB8, 0x01, 0x00, 0xEB,
                0x02, 0x33, 0xC0, 0x89, 0x46, 0xF6, 0x8B, 0x46, 0xF8, 0x3B, 0x46, 0xFE, 0x7D, 0x05, 0xB8, 0x01, 0x00,
                0xEB, 0x02, 0x33, 0xC0, 0x89, 0x46, 0xF6, 0x8B, 0x46, 0xFE, 0x3B, 0x46, 0xF8, 0x7D, 0x05, 0xB8, 0x01,
                0x00, 0xEB, 0x02, 0x33, 0xC0, 0x89, 0x46, 0xF6, 0x8B, 0x46, 0xFE, 0x3B, 0x46, 0xF8
            ];
            foreach (var oneArray in allBytes.SplitEvery(lineSize))
            {
                ByteLines.Add(new BytesLine($"{offset:X4}", oneArray));
                offset = (ushort)(offset + oneArray.Length);
            }
        }
    }
}