using MachineStateSH3 = PoViEmu.SH3.CPU.MachineState;
using MachineStateI86 = PoViEmu.I186.CPU.MachineState;

namespace PoViEmu.UI.Tools
{
    internal static class Defaults
    {
        static Defaults()
        {
            StateI86 = new MachineStateI86
            {
                Bk0 = 0x10, Bk1 = 0x11, Bk2 = 0x12, Bk3 = 0x13,
                Bk4 = 0x14, Bk5 = 0x15, Bk6 = 0x16, Fr0 = 0x20,
                Fr1 = 0x21, Fr2 = 0x22, Fr3 = 0x23, Fr4 = 0x24,
                Fr5 = 0x25, Fr6 = 0x26, Fr7 = 0x27, Fr8 = 0x28,
                Fr9 = 0x29, Fr10 = 0x30, Fr11 = 0x31, AX = 0x3201,
                BX = 0x3302, CX = 0x3403, DX = 0x3504,
                CF = true, OF = true, DF = true, SF = true,
                AF = true, ES = 0x36, DS = 0x37, SP = 0x38,
                BP = 0x39, CS = 0x40, DI = 0x41, SI = 0x42,
                IF = true, IP = 0x43, SS = 0x44, TF = true,
                PF = true, ZF = true
            };
            var bI = GetBytes();
            StateI86.WriteMemory(StateI86.DS, bI.offset, bI.bytes);

            StateSh3 = new MachineStateSH3
            {
                I0 = true, I1 = true, I2 = true, I3 = true, M = true,
                Q = true, T = true, R0 = 0x10, R1 = 0x11, R2 = 0x12,
                R3 = 0x13, R4 = 0x14, R5 = 0x15, R6 = 0x16, R7 = 0x17,
                R8 = 0x18, R9 = 0x19, R10 = 0x20, R11 = 0x21, R12 = 0x22,
                R13 = 0x23, R14 = 0x24, R15 = 0x25, R0_b = 0x30, R1_b = 0x31,
                R2_b = 0x32, R3_b = 0x33, R4_b = 0x34, R5_b = 0x35, R6_b = 0x36,
                R7_b = 0x37, S = true, MD = true, PC = 0x38, PR = 0x39,
                BL = true, SSR = 0x40, dPC = 0x41, GBR = 0x42, RB = true,
                SPC = 0x43, VBR = 0x44, MACH = 0x45, MACL = 0x46
            };
            var bS = GetBytes();
            StateSh3.WriteMemory(bS.offset, bS.bytes);
        }

        public static MachineStateSH3 StateSh3 { get; }

        public static MachineStateI86 StateI86 { get; }

        private static (ushort offset, byte[] bytes) GetBytes()
        {
            ushort offset = 0xD000;
            byte[] allBytes =
            [
                0x00, 0xFF, 0x43, 0x41, 0x53, 0x49, 0x4F, 0x03, 0x5A, 0x34, 0x38, 0x36, 0x30, 0x31, 0x30, 0x30, 0x01,
                0x01, 0xFF, 0x08, 0x61, 0x73, 0x73, 0x74, 0x65, 0x73, 0x74, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0x54, 0x09, 0x00, 0x00, 0x32, 0x30, 0x32, 0x34, 0x30, 0x38, 0x31, 0x33, 0x32, 0x31, 0x31,
                0x31, 0x30, 0x31, 0x30, 0x31, 0x32, 0x30, 0x30, 0x30, 0x30, 0x32, 0x31, 0x35, 0x30, 0x39, 0x34, 0x30,
                0x30, 0x31, 0x30, 0x30, 0x50, 0x08, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                0xFF, 0xB8, 0x00, 0x19, 0x8E, 0xC0, 0xB8, 0x16, 0x80, 0x8E, 0xD8, 0x33, 0xF6, 0xBF, 0x00, 0x00, 0xB9,
                0xA4, 0x04, 0xFC, 0xF3, 0xA4, 0x06, 0x1F, 0xBF, 0xA4, 0x04, 0xB9, 0xA4, 0x04, 0x2B, 0xCF, 0x32, 0xC0,
                0xF3, 0xAA, 0xBB, 0x00, 0x08, 0xB8, 0x00, 0x08, 0x2B, 0xC3, 0x76, 0x1C, 0x8B, 0xC8, 0xC1, 0xE1, 0x03,
                0x3D, 0x00, 0x10, 0x76, 0x06, 0xB8, 0x00, 0x10, 0xB9, 0x00, 0x80, 0x8E, 0xC3, 0x03, 0xD8, 0x33, 0xFF,
                0x33, 0xC0, 0xF3, 0xAB, 0xEB, 0xDD, 0xC7, 0x06, 0x00, 0x00, 0x00, 0x00, 0xEA, 0x04, 0x00, 0x60, 0x80,
                0xCB, 0xCB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x32,
                0x13, 0x3F, 0x13, 0x55, 0x01, 0x00, 0x80, 0x00, 0x00, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
                0x20, 0x20, 0x28, 0x28, 0x28, 0x28, 0x28, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
                0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x88, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
                0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4, 0xC4,
                0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0xC1, 0xC1, 0xC1, 0xC1, 0xC1, 0xC1, 0x81, 0x81, 0x81, 0x81,
                0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x90,
                0x90, 0x90, 0x90, 0x90, 0x90, 0xC2, 0xC2, 0xC2, 0xC2, 0xC2, 0xC2, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82,
                0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 0x90, 0x90, 0x90,
                0x90, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x39, 0x30,
                0x30, 0x31, 0x32, 0x33, 0x31, 0x32, 0x31, 0x30, 0x30, 0x30, 0x31, 0x30, 0x31, 0x55, 0x8B, 0xEC, 0x83,
                0xEC, 0x22, 0x51, 0x52, 0xC7, 0x46, 0xFE, 0xD5, 0x7E, 0xC7, 0x46, 0xFC, 0xD4, 0x7E, 0xC7, 0x46, 0xFA,
                0xD3, 0x7E, 0x8B, 0x46, 0xFE, 0x03, 0x46, 0xFC, 0x89, 0x46, 0xF8, 0x8B, 0x46, 0xFE, 0x2B, 0x46, 0xFC,
                0x89, 0x46, 0xF8, 0x8B, 0x46, 0xFE, 0xF7, 0x66, 0xFC, 0x89, 0x46, 0xF8, 0x8B, 0x46, 0xFE, 0x99, 0xF7,
                0x7E, 0xFC, 0x89, 0x46, 0xF8, 0xFF, 0x4E, 0xF8, 0x8B, 0x46, 0xFE, 0x99, 0xF7, 0x7E, 0xFC, 0x89, 0x56,
                0xF8, 0xFF, 0x46, 0xF8, 0x8B, 0x46, 0xFE, 0x3B, 0x46, 0xF8, 0x75, 0x05, 0xB8, 0x01, 0x00, 0xEB, 0x02,
                0x33, 0xC0, 0x89, 0x46, 0xF6, 0x8B, 0x46, 0xFE, 0x3B, 0x46, 0xF8, 0x74, 0x05, 0xB8, 0x01, 0x00, 0xEB,
                0x02, 0x33, 0xC0, 0x89, 0x46, 0xF6, 0x8B, 0x46, 0xF8, 0x3B, 0x46, 0xFE, 0x7D, 0x05, 0xB8, 0x01, 0x00,
                0xEB, 0x02, 0x33, 0xC0, 0x89, 0x46, 0xF6, 0x8B, 0x46, 0xFE, 0x3B, 0x46, 0xF8, 0x7D, 0x05, 0xB8, 0x01,
                0x00, 0xEB, 0x02, 0x33, 0xC0, 0x89, 0x46, 0xF6, 0x8B, 0x46, 0xFE, 0x3B, 0x46, 0xF8
            ];
            return (offset, allBytes);
        }
    }
}