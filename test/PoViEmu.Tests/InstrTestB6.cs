using Xunit;

namespace PoViEmu.Tests
{
    public sealed class InstrTestB6 : InstrTestBase
    {
        [Theory]
        [InlineData(0x69, 0x06, 0x99, 0xB8, 0x88, 0xD9, 0x69, 0x0E, 0x7A, 0xDC, 0xF6, 0x94)]
        //[InlineData(0x69, 0x16, 0x3F, 0x23, 0x33, 0x71, 0x69, 0x26, 0x92, 0xF2, 0xFD, 0x1C)]
        //[InlineData(0x69, 0x2E, 0x30, 0xB6, 0x12, 0xEF, 0x69, 0x36, 0x75, 0x62, 0x33, 0xD0)]
        /*[InlineData(0x69, 0x3E, 0x08, 0xD1, 0x4A, 0xE5, 0x69, 0x80, 0x79, 0x37, 0x21, 0x32)]
        [InlineData(0x69, 0x81, 0xE5, 0x5D, 0x99, 0x21, 0x69, 0x82, 0xCA, 0x06, 0x0D, 0x80)]
        [InlineData(0x69, 0x83, 0xB7, 0x78, 0x9A, 0x54, 0x69, 0x85, 0x1B, 0x97, 0x71, 0x88)]
        [InlineData(0x69, 0x86, 0x09, 0x79, 0x83, 0x96, 0x69, 0x86, 0x7C, 0xDF, 0x19, 0x6F)]
        [InlineData(0x69, 0x87, 0xC4, 0x4A, 0x34, 0xCA, 0x69, 0x87, 0xD1, 0xFC, 0xDE, 0xBB)]
        [InlineData(0x69, 0x88, 0x12, 0xEF, 0x14, 0x34, 0x69, 0x88, 0xFE, 0x47, 0x8A, 0x5F)]
        [InlineData(0x69, 0x89, 0x01, 0x94, 0xC4, 0x46, 0x69, 0x89, 0xD7, 0x6E, 0x94, 0xE8)]
        [InlineData(0x69, 0x8A, 0xA6, 0x22, 0x5D, 0x51, 0x69, 0x8A, 0xEA, 0xAB, 0x4B, 0x75)]
        [InlineData(0x69, 0x8B, 0xD9, 0x82, 0x74, 0xDB, 0x69, 0x8C, 0x13, 0x32, 0x9F, 0xE9)]
        [InlineData(0x69, 0x8C, 0xEF, 0x8A, 0x2E, 0xA7, 0x69, 0x8D, 0xEC, 0x9A, 0x49, 0xD6)]
        [InlineData(0x69, 0x8E, 0x3F, 0xF4, 0x3D, 0xE5, 0x69, 0x8F, 0x07, 0x17, 0xEF, 0xF6)]
        [InlineData(0x69, 0x8F, 0x1E, 0x8E, 0x42, 0x75, 0x69, 0x90, 0xB5, 0x49, 0x8C, 0x64)]
        [InlineData(0x69, 0x91, 0xD2, 0x48, 0xD9, 0x07, 0x69, 0x92, 0x3B, 0xB4, 0x75, 0x7E)]
        [InlineData(0x69, 0x93, 0x11, 0xA1, 0xA3, 0xCD, 0x69, 0x93, 0x32, 0x48, 0x07, 0x25)]
        [InlineData(0x69, 0x94, 0x65, 0x1F, 0xE4, 0xD2, 0x69, 0x94, 0xD8, 0xE7, 0x24, 0xD4)]
        [InlineData(0x69, 0x95, 0x06, 0x4F, 0x0B, 0x1E, 0x69, 0x95, 0xCE, 0x87, 0xDF, 0x31)]
        [InlineData(0x69, 0x96, 0x06, 0xFF, 0xD8, 0x8F, 0x69, 0x96, 0x72, 0xFC, 0x50, 0x34)]
        [InlineData(0x69, 0x97, 0xAA, 0xD6, 0xA3, 0xF0, 0x69, 0x97, 0xD2, 0x56, 0xBE, 0xA2)]
        [InlineData(0x69, 0x98, 0x9C, 0x89, 0xDC, 0xE5, 0x69, 0x99, 0x8D, 0xB9, 0x28, 0x2A)]
        [InlineData(0x69, 0x99, 0xBD, 0x6C, 0x31, 0x60, 0x69, 0x9A, 0x86, 0x3E, 0xBA, 0x06)]
        [InlineData(0x69, 0x9B, 0x6A, 0xC7, 0xB2, 0x07, 0x69, 0x9B, 0xB6, 0x25, 0xF5, 0xB2)]
        [InlineData(0x69, 0x9C, 0x80, 0xC0, 0xCB, 0x0F, 0x69, 0x9D, 0x6A, 0xC5, 0xF0, 0xB0)]
        [InlineData(0x69, 0x9E, 0x8E, 0xA1, 0xAD, 0xB8, 0x69, 0x9E, 0xF7, 0x10, 0xC5, 0x43)]
        [InlineData(0x69, 0x9F, 0xD2, 0x03, 0x51, 0xB6, 0x69, 0xA0, 0x31, 0xA4, 0x71, 0x86)]
        [InlineData(0x69, 0xA0, 0xF9, 0x2A, 0x19, 0xC4, 0x69, 0xA1, 0x66, 0xB7, 0x9A, 0xE8)]
        [InlineData(0x69, 0xA2, 0xE4, 0xB3, 0xD3, 0x6F, 0x69, 0xA2, 0xEB, 0x1A, 0xA6, 0x3C)]
        [InlineData(0x69, 0xA3, 0xAF, 0xE9, 0x2B, 0x10, 0x69, 0xA4, 0x60, 0x8F, 0x78, 0x6F)]
        [InlineData(0x69, 0xA5, 0x26, 0x36, 0xBA, 0xC8, 0x69, 0xA6, 0x87, 0xFE, 0x5E, 0x83)]
        [InlineData(0x69, 0xA6, 0xEC, 0x13, 0xE8, 0x76, 0x69, 0xA7, 0x26, 0x3A, 0x50, 0x4F)]
        [InlineData(0x69, 0xA7, 0x5A, 0xB8, 0x38, 0x24, 0x69, 0xA8, 0x10, 0xA9, 0x39, 0x29)]
        [InlineData(0x69, 0xA9, 0x46, 0x93, 0xCD, 0x1D, 0x69, 0xA9, 0xAD, 0x27, 0xBE, 0x29)]
        [InlineData(0x69, 0xAA, 0xF3, 0xDE, 0xC7, 0x0D, 0x69, 0xAB, 0xCB, 0x13, 0xE2, 0x82)]
        [InlineData(0x69, 0xAD, 0x41, 0xD5, 0x22, 0x7C, 0x69, 0xAD, 0x98, 0x59, 0xB6, 0x4E)]
        [InlineData(0x69, 0xAE, 0x5F, 0xED, 0xA3, 0x69, 0x69, 0xAE, 0x7A, 0x57, 0x63, 0x31)]
        [InlineData(0x69, 0xAF, 0x72, 0xF3, 0xE0, 0x42, 0x69, 0xAF, 0xCC, 0x49, 0x1F, 0x75)]
        [InlineData(0x69, 0xB0, 0x78, 0x80, 0x91, 0x43, 0x69, 0xB0, 0x8A, 0x64, 0x95, 0xA3)]
        [InlineData(0x69, 0xB1, 0xB7, 0xD6, 0xE5, 0xB9, 0x69, 0xB1, 0xC1, 0x0A, 0xAA, 0x65)]
        [InlineData(0x69, 0xB2, 0x02, 0x84, 0x47, 0xCC, 0x69, 0xB2, 0x48, 0x10, 0x32, 0xE9)]
        [InlineData(0x69, 0xB3, 0x48, 0x7B, 0x96, 0x00, 0x69, 0xB3, 0x58, 0xED, 0x48, 0x08)]
        [InlineData(0x69, 0xB4, 0x0B, 0x8D, 0x74, 0x4B, 0x69, 0xB4, 0x76, 0x19, 0x53, 0xAA)]
        [InlineData(0x69, 0xB5, 0x3A, 0x66, 0x2B, 0xC0, 0x69, 0xB6, 0x42, 0x4D, 0xF5, 0xF2)]
        [InlineData(0x69, 0xB6, 0xAA, 0x90, 0xC9, 0x30, 0x69, 0xB8, 0x5A, 0x14, 0xD3, 0xF2)]
        [InlineData(0x69, 0xB8, 0xC2, 0x9B, 0x5C, 0xD4, 0x69, 0xB9, 0xB4, 0x8E, 0x26, 0x59)]
        [InlineData(0x69, 0xBA, 0x20, 0x7C, 0x28, 0x3D, 0x69, 0xBA, 0x7A, 0x9A, 0x4F, 0xF8)]
        [InlineData(0x69, 0xBB, 0x51, 0x28, 0x26, 0x39, 0x69, 0xBB, 0x8A, 0x8E, 0x04, 0x45)]
        [InlineData(0x69, 0xBC, 0x0D, 0x92, 0xC4, 0xA4, 0x69, 0xBD, 0x9A, 0xB6, 0x45, 0xEB)]
        [InlineData(0x69, 0xBD, 0xF5, 0x01, 0x0F, 0x03, 0x69, 0xBE, 0x4D, 0x30, 0x9F, 0x49)]
        [InlineData(0x69, 0xBE, 0x76, 0xC6, 0x2D, 0x2F, 0x69, 0xBF, 0x07, 0xFE, 0x70, 0x3C)]
        [InlineData(0x69, 0xBF, 0x0D, 0x0C, 0x8D, 0x49, 0x81, 0x06, 0x78, 0x31, 0x8E, 0x29)]
        [InlineData(0x81, 0x0E, 0x4D, 0xC2, 0x01, 0x8A, 0x81, 0x16, 0xED, 0xBE, 0x58, 0x64)]
        [InlineData(0x81, 0x1E, 0xBE, 0x88, 0x98, 0x6D, 0x81, 0x26, 0xCF, 0xE9, 0x2B, 0x9D)]
        [InlineData(0x81, 0x2E, 0x11, 0x5D, 0x05, 0x61, 0x81, 0x2E, 0x14, 0xBC, 0xE7, 0x0B)]
        [InlineData(0x81, 0x36, 0x75, 0xC4, 0x86, 0xCB, 0x81, 0x3E, 0x7C, 0x01, 0xAC, 0x41)]
        [InlineData(0x81, 0x3E, 0xC5, 0x8D, 0x74, 0x8C, 0x81, 0x80, 0xFD, 0x3F, 0x74, 0x25)]
        [InlineData(0x81, 0x81, 0x09, 0x7E, 0x34, 0xDA, 0x81, 0x81, 0xEA, 0x9A, 0x91, 0x92)]
        [InlineData(0x81, 0x82, 0x05, 0x7F, 0x9D, 0x6F, 0x81, 0x82, 0x8E, 0x92, 0x39, 0xFC)]
        [InlineData(0x81, 0x83, 0x4D, 0xA5, 0xDE, 0xF8, 0x81, 0x84, 0xEC, 0x3F, 0xF1, 0xCF)]
        [InlineData(0x81, 0x85, 0x23, 0x67, 0xF8, 0x8F, 0x81, 0x85, 0xCE, 0xDF, 0x59, 0xAC)]
        [InlineData(0x81, 0x86, 0x37, 0x18, 0x0E, 0x32, 0x81, 0x86, 0xCA, 0xAC, 0x0A, 0x9C)]
        [InlineData(0x81, 0x87, 0xBB, 0x64, 0x31, 0x48, 0x81, 0x87, 0xDD, 0xBE, 0xC7, 0x22)]
        [InlineData(0x81, 0x88, 0x40, 0xA1, 0x91, 0x0A, 0x81, 0x88, 0x72, 0x66, 0x4F, 0x9A)]
        [InlineData(0x81, 0x89, 0x11, 0xFC, 0x29, 0x8D, 0x81, 0x89, 0x6A, 0x3B, 0x22, 0x5D)]
        [InlineData(0x81, 0x8A, 0x60, 0x14, 0xFE, 0x71, 0x81, 0x8B, 0x4A, 0x53, 0x51, 0x04)]
        [InlineData(0x81, 0x8C, 0x2A, 0x43, 0x08, 0x1B, 0x81, 0x8C, 0xA5, 0xCA, 0xDC, 0xF4)]
        [InlineData(0x81, 0x8D, 0x56, 0x95, 0x57, 0x51, 0x81, 0x8E, 0x28, 0x7A, 0x4A, 0x6F)]
        [InlineData(0x81, 0x8F, 0x07, 0x46, 0x57, 0x49, 0x81, 0x90, 0x14, 0xED, 0xE9, 0x59)]
        [InlineData(0x81, 0x91, 0x3D, 0x4E, 0x79, 0x04, 0x81, 0x91, 0xEE, 0x80, 0x28, 0xB2)]
        [InlineData(0x81, 0x92, 0x8B, 0x2C, 0x34, 0x2E, 0x81, 0x92, 0xD2, 0xD2, 0x80, 0x54)]
        [InlineData(0x81, 0x93, 0xC6, 0x8C, 0x6C, 0xA8, 0x81, 0x94, 0x2E, 0x15, 0x06, 0x3A)]
        [InlineData(0x81, 0x94, 0x59, 0xA9, 0x73, 0xA7, 0x81, 0x95, 0x19, 0xE4, 0x9D, 0x4D)]
        [InlineData(0x81, 0x95, 0xF6, 0x39, 0x1B, 0xC8, 0x81, 0x96, 0x87, 0xEC, 0x4B, 0x45)]
        [InlineData(0x81, 0x97, 0x60, 0x2A, 0x0A, 0x69, 0x81, 0x97, 0xD0, 0xFA, 0x17, 0x89)]
        [InlineData(0x81, 0x98, 0x49, 0x23, 0xB3, 0xC3, 0x81, 0x98, 0xB2, 0xCF, 0xC1, 0x53)]
        [InlineData(0x81, 0x99, 0x96, 0xE1, 0x3A, 0x46, 0x81, 0x99, 0xCC, 0x61, 0xBD, 0x6F)]
        [InlineData(0x81, 0x9A, 0x24, 0x18, 0x6A, 0x88, 0x81, 0x9A, 0x27, 0xEE, 0xA2, 0x8F)]
        [InlineData(0x81, 0x9A, 0x57, 0xFF, 0x81, 0x75, 0x81, 0x9B, 0x40, 0xD3, 0xC4, 0x8F)]
        [InlineData(0x81, 0x9B, 0xB5, 0x5F, 0x73, 0xDB, 0x81, 0x9D, 0x03, 0x5C, 0xC8, 0x8E)]
        [InlineData(0x81, 0x9E, 0xFB, 0x4F, 0xCD, 0x2B, 0x81, 0x9F, 0x5B, 0x4F, 0xE8, 0x40)]
        [InlineData(0x81, 0xA0, 0x14, 0xB6, 0xF4, 0x30, 0x81, 0xA0, 0x97, 0x6A, 0xE1, 0x24)]
        [InlineData(0x81, 0xA1, 0x7C, 0xFD, 0xAF, 0x0B, 0x81, 0xA2, 0x58, 0xB1, 0xD2, 0x7A)]
        [InlineData(0x81, 0xA3, 0x52, 0x8D, 0xC5, 0x8D, 0x81, 0xA3, 0xC8, 0x0C, 0x7E, 0x7A)]
        [InlineData(0x81, 0xA4, 0x75, 0xD5, 0xD0, 0xE1, 0x81, 0xA5, 0x51, 0xAC, 0xE1, 0x7C)]
        [InlineData(0x81, 0xA5, 0xD7, 0x42, 0x98, 0xAB, 0x81, 0xA6, 0xE9, 0xB7, 0xA5, 0x21)]
        [InlineData(0x81, 0xA7, 0x13, 0xFA, 0x00, 0xD8, 0x81, 0xA8, 0x2F, 0x3C, 0x17, 0xC9)]
        [InlineData(0x81, 0xA8, 0x9E, 0xC7, 0x18, 0x9D, 0x81, 0xA9, 0x58, 0xF0, 0x2E, 0x76)]
        [InlineData(0x81, 0xA9, 0x9E, 0x1D, 0x7E, 0x13, 0x81, 0xAA, 0x5F, 0x28, 0x78, 0x2E)]
        [InlineData(0x81, 0xAA, 0xD5, 0x92, 0xA8, 0xAC, 0x81, 0xAB, 0x2B, 0x2C, 0x1D, 0x73)]
        [InlineData(0x81, 0xAC, 0x16, 0x45, 0xD5, 0x48, 0x81, 0xAD, 0x45, 0xB5, 0xB9, 0xE9)]
        [InlineData(0x81, 0xAE, 0x04, 0x4E, 0x58, 0xFE, 0x81, 0xB0, 0x34, 0x7F, 0xE9, 0xDC)]
        [InlineData(0x81, 0xB0, 0x75, 0x9D, 0xF2, 0xEF, 0x81, 0xB1, 0x33, 0x05, 0x04, 0xCF)]
        [InlineData(0x81, 0xB1, 0x6C, 0xD9, 0x58, 0x65, 0x81, 0xB2, 0x2F, 0x81, 0xEC, 0xE4)]
        [InlineData(0x81, 0xB2, 0xFE, 0x79, 0x3E, 0x39, 0x81, 0xB3, 0x2E, 0x18, 0xCC, 0xD4)]
        [InlineData(0x81, 0xB3, 0x6E, 0x9E, 0x18, 0xD7, 0x81, 0xB3, 0xFB, 0x00, 0x7B, 0xB4)]
        [InlineData(0x81, 0xB4, 0x0B, 0xE3, 0xD9, 0x34, 0x81, 0xB4, 0x73, 0x6C, 0x88, 0x47)]
        [InlineData(0x81, 0xB5, 0x71, 0xF6, 0xB5, 0xF7, 0x81, 0xB6, 0x06, 0xF6, 0x78, 0x67)]
        [InlineData(0x81, 0xB6, 0x21, 0x0A, 0xC2, 0xCB, 0x81, 0xB7, 0xD9, 0x52, 0x1C, 0xBD)]
        [InlineData(0x81, 0xB8, 0xDA, 0x8C, 0x50, 0x37, 0x81, 0xB9, 0x00, 0x27, 0xC6, 0x0C)]
        [InlineData(0x81, 0xB9, 0xAC, 0xBD, 0xBE, 0xFC, 0x81, 0xBA, 0x39, 0x78, 0xD7, 0x1D)]
        [InlineData(0x81, 0xBA, 0xB0, 0xAC, 0x5A, 0xA6, 0x81, 0xBB, 0x0F, 0x5F, 0xEE, 0xE7)]
        [InlineData(0x81, 0xBB, 0x76, 0xA5, 0x04, 0x1C, 0x81, 0xBD, 0x0E, 0x6C, 0x6C, 0xAE)]
        [InlineData(0x81, 0xBE, 0x40, 0x11, 0x8C, 0x6D, 0x81, 0xBF, 0x13, 0xB3, 0xDF, 0x8F)]
        [InlineData(0xC7, 0x06, 0xD6, 0x36, 0x1E, 0x28, 0xC7, 0x80, 0x7A, 0xB0, 0x05, 0xBC)]
        [InlineData(0xC7, 0x81, 0x68, 0x30, 0x3C, 0x4D, 0xC7, 0x82, 0x1F, 0x43, 0x7F, 0x92)]
        [InlineData(0xC7, 0x83, 0x00, 0xEF, 0x33, 0xA5, 0xC7, 0x84, 0x75, 0x85, 0xFD, 0x69)]
        [InlineData(0xC7, 0x84, 0xB8, 0x7F, 0xA9, 0x31, 0xC7, 0x85, 0x80, 0xC5, 0x76, 0x0D)]
        [InlineData(0xC7, 0x86, 0x86, 0x52, 0x98, 0x12, 0xC7, 0x87, 0x12, 0x35, 0x88, 0x16)]
        [InlineData(0xF7, 0x06, 0x7E, 0xC7, 0xEC, 0x6B, 0xF7, 0x80, 0x5B, 0xBC, 0xAB, 0xC6)]
        [InlineData(0xF7, 0x80, 0xF6, 0x51, 0xEB, 0xDB, 0xF7, 0x81, 0xA7, 0xF3, 0x6A, 0xF6)]
        [InlineData(0xF7, 0x83, 0x22, 0xF0, 0x0D, 0xD1, 0xF7, 0x84, 0x51, 0x36, 0x0C, 0x50)]*/
        //[InlineData(0xF7, 0x85, 0xCC, 0x6E, 0x2F, 0x86, 0xF7, 0x86, 0x35, 0xE7, 0xF6, 0xE7)]
        //[InlineData(0xF7, 0x86, 0xAA, 0x1C, 0xDF, 0x02, 0xF7, 0x87, 0x4D, 0xA7, 0x60, 0x97)]
        public void ShouldCheck(params int[] rawBytes) => ShouldCheckThis(rawBytes);
    }
}