using System.IO;
using System.Linq;
using PoViEmu.Core.Machine;
using Xunit;

namespace PoViEmu.Tests
{
    public class InstrTest
    {
        [Theory]
        [InlineData(0x90, 0xeb, 0x07, 0x51)]
        [InlineData(0xbb, 0x34, 0x12, 0x90, 0xeb, 0x04, 0xeb, 0x02, 0xeb, 0x00, 0x90)]
        [InlineData(0x80, 0xc4, 0x01, 0xeb, 0x00)]
        [InlineData(0xb4, 0x01, 0xeb, 0x02, 0x90, 0x90, 0x52)]
        [InlineData(0x94, 0xD7, 0x51)]
        [InlineData(0x97, 0x92, 0x96)]
        [InlineData(0x95, 0x93, 0x91)]
        [InlineData(0xF9, 0xFD, 0xFB)]
        [InlineData(0xCB, 0xD6, 0x36)]
        [InlineData(0x5C, 0x17, 0xC3)]
        [InlineData(0xEE, 0xEF, 0xF3)]
        [InlineData(0x50, 0x55, 0x53)]
        [InlineData(0x0E, 0x51, 0x57)]
        [InlineData(0x1E, 0x52, 0x06)]
        [InlineData(0x56, 0x54, 0x16)]
        [InlineData(0x58, 0x5D, 0x5B)]
        [InlineData(0x59, 0x5F, 0x1F)]
        [InlineData(0x5A, 0x07, 0x5E)]
        [InlineData(0xA4, 0xA5, 0x66)]
        [InlineData(0xC9, 0xAC, 0xAD)]
        [InlineData(0x46, 0x44, 0xCF)]
        [InlineData(0xF1, 0xCC, 0xCE)]
        [InlineData(0xF4, 0xEC, 0xED)]
        [InlineData(0x40, 0x45, 0x43)]
        [InlineData(0x41, 0x47, 0x42)]
        [InlineData(0x26, 0x64, 0x65)]
        [InlineData(0x48, 0x4D, 0x3E)]
        [InlineData(0x4A, 0x4E, 0x4C)]
        [InlineData(0x4B, 0x49, 0x4F)]
        [InlineData(0x61, 0x60, 0x67)]
        [InlineData(0xC9, 0x6E, 0x6F)]
        [InlineData(0xD7, 0x6C, 0x6D)]
        [InlineData(0xAA, 0xAB, 0x9B)]
        [InlineData(0x9E, 0xAE, 0xAF)]
        [InlineData(0x9D, 0x9C, 0xF2)]
        [InlineData(0xA4, 0xA5, 0x90)]
        [InlineData(0xF4, 0x9F, 0xF0)]
        [InlineData(0x99, 0x27, 0x2F)]
        [InlineData(0xF5, 0xA6, 0xA7)]
        [InlineData(0xF8, 0xFC, 0xFA)]
        [InlineData(0x37, 0x3F, 0x98)]
        [InlineData(0x51, 0x52, 0x53)]
        public void ShouldCheck(params int[] rawBytes)
        {
            var bytes = rawBytes.Select(b => (byte)b).ToArray();
            var expected = NasmTool.DisassembleNasm(bytes);
            var actual = new MemoryStream(bytes).Disassemble().ToText();
            TestTool.Compare(expected, actual);
        }
    }
}