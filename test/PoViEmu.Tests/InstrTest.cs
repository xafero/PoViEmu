using System.IO;
using System.Linq;
using PoViEmu.Core.Machine;
using Xunit;

namespace PoViEmu.Tests
{
    public class InstrTest
    {
        [Theory]
        [InlineData(0x19, 0x01, 0x79, 0xA9)]
        [InlineData(0xDB, 0xD2, 0x2B, 0xE5, 0x02, 0x33)]
        [InlineData(0x12, 0x14, 0x63, 0xEE, 0x84, 0x2B)]
        [InlineData(0x30, 0x03, 0x22, 0xD1, 0x13, 0xED)]
        [InlineData(0x88, 0xFA, 0x1A, 0xC1, 0x39, 0x25)]
        [InlineData(0x88, 0xDB, 0xAD, 0xDD, 0xDE)]
        [InlineData(0x03, 0x2B, 0x3B, 0xC7, 0xD9, 0x39)]
        [InlineData(0xE5, 0x93, 0xE2, 0x7F, 0x22, 0xFB)]
        [InlineData(0x18, 0xFF, 0xD8, 0xF0, 0x19, 0x1A)]
        [InlineData(0x09, 0x17, 0x86, 0x13, 0x88, 0xEE)]
        [InlineData(0x3A, 0x1D, 0xD1, 0x00, 0x3B, 0xCD)]
        [InlineData(0x2A, 0xC6, 0x28, 0x37, 0x55, 0x9B)]
        [InlineData(0x6A, 0x7A, 0x85, 0x1C, 0x8E, 0xFA)]
        [InlineData(0x24, 0xC8, 0x39, 0xD4, 0x08, 0xCF)]
        [InlineData(0x89, 0xFA, 0xFF, 0x29, 0x18, 0xD3)]
        [InlineData(0x63, 0xFA, 0x76, 0x56, 0xFF, 0x01)]
        [InlineData(0x12, 0xC4, 0x23, 0xDC, 0xE1, 0x32)]
        [InlineData(0xFF, 0x2B, 0x86, 0xEE, 0x00, 0xD0)]
        [InlineData(0x89, 0xC7, 0x3B, 0xD8, 0x22, 0x23)]
        [InlineData(0x00, 0x34, 0xAA, 0x72, 0xD4)]
        [InlineData(0x2B, 0xF9, 0x20, 0x14, 0xB5, 0x9B)]
        [InlineData(0x10, 0x2C, 0x12, 0xE5, 0xB3, 0xB5)]
        [InlineData(0xE1, 0x99, 0x6A, 0x20, 0xE7, 0x05)]
        [InlineData(0xD2, 0x19, 0x84, 0x14, 0x87, 0xE6)]
        [InlineData(0x11, 0xFE, 0xD9, 0x31, 0x87, 0x2C)]
        [InlineData(0x7F, 0x48, 0x87, 0xEE, 0x63, 0xFD)]
        [InlineData(0x10, 0xDD, 0x78, 0xCC, 0xD2, 0x22)]
        [InlineData(0x39, 0xD1, 0x8E, 0x0C, 0x32, 0xC6)]
        [InlineData(0xDE, 0x22, 0xD5, 0xB9, 0x86, 0xC6)]
        [InlineData(0xB7, 0x86, 0x28, 0xF1, 0x18, 0xE8)]
        [InlineData(0x0B, 0x11, 0xA8, 0x64, 0x23, 0x28)]
        [InlineData(0x77, 0xCF, 0xDE, 0x17, 0x16)]
        [InlineData(0x32, 0x2C, 0xB2, 0x88, 0x88, 0x08)]
        [InlineData(0x11, 0xC4, 0xDF, 0xF0, 0xB0, 0xBF)]
        [InlineData(0xCD, 0x76, 0xE3, 0x37, 0xE6, 0x75)]
        [InlineData(0x0A, 0xE9, 0x7B, 0x60, 0xD8, 0x0A)]
        [InlineData(0x3C, 0x42, 0xE0, 0x34, 0x70, 0x02)]
        [InlineData(0x02, 0xCE, 0x28, 0x32, 0x14, 0x1D)]
        [InlineData(0x0C, 0xB5, 0xE4, 0xFB, 0xB6, 0x99)]
        [InlineData(0xF5, 0xD0, 0xD6, 0x0B, 0x2C)]
        [InlineData(0xDD, 0xDF, 0xD4, 0x8B, 0x2C, 0xAA)]
        [InlineData(0x8A, 0xEB, 0x23, 0x02, 0x74, 0xAE, 0x23, 0xE9, 0xA, 0x1A)]
        [InlineData(0xB1, 0x5C, 0x34, 0x62, 0x71, 0x3F, 0xE2, 0x8F)]
        [InlineData(0x90, 0xeb, 0x07, 0x51)]
        [InlineData(0xbb, 0x34, 0x12, 0x90, 0xeb, 0x04, 0xeb, 0x02, 0xeb, 0x00, 0x90)]
        [InlineData(0x80, 0xc4, 0x01, 0xeb, 0x00)]
        [InlineData(0xb4, 0x01, 0xeb, 0x02, 0x90, 0x90, 0x52)]
        [InlineData(0x94, 0xD7, 0x51)]
        [InlineData(0x97, 0x92, 0x96)]
        [InlineData(0x95, 0x93, 0x91)]
        [InlineData(0xF9, 0xFD, 0xFB)]
        [InlineData(0xCB, 0xD6, 0x36)]
        [InlineData(0x5C, 0x17, 0xC3)]
        [InlineData(0xEE, 0xEF, 0xF3)]
        [InlineData(0x50, 0x55, 0x53)]
        [InlineData(0x0E, 0x51, 0x57)]
        [InlineData(0x1E, 0x52, 0x06)]
        [InlineData(0x56, 0x54, 0x16)]
        [InlineData(0x58, 0x5D, 0x5B)]
        [InlineData(0x59, 0x5F, 0x1F)]
        [InlineData(0x5A, 0x07, 0x5E)]
        [InlineData(0xA4, 0xA5, 0x66)]
        [InlineData(0xC9, 0xAC, 0xAD)]
        [InlineData(0x46, 0x44, 0xCF)]
        [InlineData(0xF1, 0xCC, 0xCE)]
        [InlineData(0xF4, 0xEC, 0xED)]
        [InlineData(0x40, 0x45, 0x43)]
        [InlineData(0x41, 0x47, 0x42)]
        [InlineData(0x26, 0x64, 0x65)]
        [InlineData(0x48, 0x4D, 0x3E)]
        [InlineData(0x4A, 0x4E, 0x4C)]
        [InlineData(0x4B, 0x49, 0x4F)]
        [InlineData(0x61, 0x60, 0x16)]
        [InlineData(0xC9, 0x6E, 0x6F)]
        [InlineData(0xD7, 0x6C, 0x6D)]
        [InlineData(0xAA, 0xAB, 0x9B)]
        [InlineData(0x9E, 0xAE, 0xAF)]
        [InlineData(0x9D, 0x9C, 0xF2)]
        [InlineData(0xA4, 0xA5, 0x90)]
        [InlineData(0xF4, 0x9F, 0xF0)]
        [InlineData(0x99, 0x27, 0x2F)]
        [InlineData(0xF5, 0xA6, 0xA7)]
        [InlineData(0xF8, 0xFC, 0xFA)]
        [InlineData(0x37, 0x3F, 0x98)]
        [InlineData(0x51, 0x52, 0x53)]
        public void ShouldCheck(params int[] rawBytes)
        {
            var bytes = rawBytes.Select(b => (byte)b).ToArray();
            var expected = NasmTool.DisassembleNasm(bytes);
            var actual = new MemoryStream(bytes).Disassemble().ToText();
            TestTool.Compare(expected, actual);
        }
    }
}